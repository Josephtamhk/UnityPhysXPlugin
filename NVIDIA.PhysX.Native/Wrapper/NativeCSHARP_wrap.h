/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Native_WRAP_H_
#define SWIG_Native_WRAP_H_

class SwigDirector_PxSimulationEventCallback : public physx::wrap::PxSimulationEventCallback, public Swig::Director {

public:
    SwigDirector_PxSimulationEventCallback();
    virtual void onConstraintBreak(physx::PxConstraintInfoList const &constraints);
    virtual void onWake(physx::PxActorList const &actors);
    virtual void onSleep(physx::PxActorList const &actors);
    virtual void onContact(physx::PxContactPairHeader const &pairHeader, physx::PxContactPairList const &pairs);
    virtual void onTrigger(physx::PxTriggerPairList const &pairs);
    virtual void onAdvance(physx::PxRigidBodyList const &bodyBuffer, physx::PxTransformList const &poseBuffer);
    virtual ~SwigDirector_PxSimulationEventCallback();

    typedef void (SWIGSTDCALL* SWIG_Callback0_Dispatcher_t)(Swig::GCHandle, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_Dispatcher_t)(Swig::GCHandle, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_Dispatcher_t)(Swig::GCHandle, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_Dispatcher_t)(Swig::GCHandle, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_Dispatcher_t)(Swig::GCHandle, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_Dispatcher_t)(Swig::GCHandle, void *, void *);
    void swig_connect_director(SWIG_Callback0_Dispatcher_t callbackonConstraintBreak_dispatcher, Swig::GCHandle callbackonConstraintBreak, SWIG_Callback1_Dispatcher_t callbackonWake_dispatcher, Swig::GCHandle callbackonWake, SWIG_Callback2_Dispatcher_t callbackonSleep_dispatcher, Swig::GCHandle callbackonSleep, SWIG_Callback3_Dispatcher_t callbackonContact_dispatcher, Swig::GCHandle callbackonContact, SWIG_Callback4_Dispatcher_t callbackonTrigger_dispatcher, Swig::GCHandle callbackonTrigger, SWIG_Callback5_Dispatcher_t callbackonAdvance_dispatcher, Swig::GCHandle callbackonAdvance);

private:
    SWIG_Callback0_Dispatcher_t swig_callbackonConstraintBreak_dispatcher;
    Swig::GCHandle swig_callbackonConstraintBreak;
    SWIG_Callback1_Dispatcher_t swig_callbackonWake_dispatcher;
    Swig::GCHandle swig_callbackonWake;
    SWIG_Callback2_Dispatcher_t swig_callbackonSleep_dispatcher;
    Swig::GCHandle swig_callbackonSleep;
    SWIG_Callback3_Dispatcher_t swig_callbackonContact_dispatcher;
    Swig::GCHandle swig_callbackonContact;
    SWIG_Callback4_Dispatcher_t swig_callbackonTrigger_dispatcher;
    Swig::GCHandle swig_callbackonTrigger;
    SWIG_Callback5_Dispatcher_t swig_callbackonAdvance_dispatcher;
    Swig::GCHandle swig_callbackonAdvance;
    void swig_init_callbacks();
};

class SwigDirector_PxSimulationFilterCallback : public physx::wrap::PxSimulationFilterCallback, public Swig::Director {

public:
    SwigDirector_PxSimulationFilterCallback();
    virtual void pairLost(physx::PxU32 pairID, bool objectRemoved, physx::PxFilterObjectAttributes attributes0, physx::PxFilterData const &filterData0, physx::PxFilterObjectAttributes attributes1, physx::PxFilterData const &filterData1);
    virtual ~SwigDirector_PxSimulationFilterCallback();

    typedef void (SWIGSTDCALL* SWIG_Callback0_Dispatcher_t)(Swig::GCHandle, unsigned int, unsigned int, unsigned int,  physx::PxFilterData* , unsigned int,  physx::PxFilterData* );
    void swig_connect_director(SWIG_Callback0_Dispatcher_t callbackpairLost_dispatcher, Swig::GCHandle callbackpairLost);

private:
    SWIG_Callback0_Dispatcher_t swig_callbackpairLost_dispatcher;
    Swig::GCHandle swig_callbackpairLost;
    void swig_init_callbacks();
};

class SwigDirector_PxBroadPhaseCallback : public physx::PxBroadPhaseCallback, public Swig::Director {

public:
    SwigDirector_PxBroadPhaseCallback();
    virtual ~SwigDirector_PxBroadPhaseCallback();
    virtual void onObjectOutOfBounds(physx::PxShape &shape, physx::PxActor &actor);
    virtual void onObjectOutOfBounds(physx::PxAggregate &aggregate);

    typedef void (SWIGSTDCALL* SWIG_Callback0_Dispatcher_t)(Swig::GCHandle, void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_Dispatcher_t)(Swig::GCHandle, void *);
    void swig_connect_director(SWIG_Callback0_Dispatcher_t callbackonObjectOutOfBounds__SWIG_0_dispatcher, Swig::GCHandle callbackonObjectOutOfBounds__SWIG_0, SWIG_Callback1_Dispatcher_t callbackonObjectOutOfBounds__SWIG_1_dispatcher, Swig::GCHandle callbackonObjectOutOfBounds__SWIG_1);

private:
    SWIG_Callback0_Dispatcher_t swig_callbackonObjectOutOfBounds__SWIG_0_dispatcher;
    Swig::GCHandle swig_callbackonObjectOutOfBounds__SWIG_0;
    SWIG_Callback1_Dispatcher_t swig_callbackonObjectOutOfBounds__SWIG_1_dispatcher;
    Swig::GCHandle swig_callbackonObjectOutOfBounds__SWIG_1;
    void swig_init_callbacks();
};

class SwigDirector_PxErrorCallback : public physx::PxErrorCallback, public Swig::Director {

public:
    SwigDirector_PxErrorCallback();
    virtual ~SwigDirector_PxErrorCallback();
    virtual void reportError(physx::PxErrorCode::Enum code, char const *message, char const *file, int line);

    typedef void (SWIGSTDCALL* SWIG_Callback0_Dispatcher_t)(Swig::GCHandle, int, char *, char *, int);
    void swig_connect_director(SWIG_Callback0_Dispatcher_t callbackreportError_dispatcher, Swig::GCHandle callbackreportError);

private:
    SWIG_Callback0_Dispatcher_t swig_callbackreportError_dispatcher;
    Swig::GCHandle swig_callbackreportError;
    void swig_init_callbacks();
};


#endif
