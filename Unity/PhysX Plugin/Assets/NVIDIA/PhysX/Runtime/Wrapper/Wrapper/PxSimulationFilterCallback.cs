//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NVIDIA.PhysX {

public partial class PxSimulationFilterCallback {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxSimulationFilterCallback(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxSimulationFilterCallback obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxSimulationFilterCallback() {
    destroy();
  }

  public virtual void destroy() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NativePINVOKE.delete_PxSimulationFilterCallback(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxSimulationFilterCallback() : this(NativePINVOKE.new_PxSimulationFilterCallback(), true) {
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  public virtual void pairLost(uint pairID, bool objectRemoved, uint attributes0,  PxFilterData  filterData0, uint attributes1,  PxFilterData  filterData1) {
    if (SwigDerivedClassHasMethod("pairLost", swigMethodTypes0)) NativePINVOKE.PxSimulationFilterCallback_pairLostSwigExplicitPxSimulationFilterCallback(swigCPtr, pairID, objectRemoved, attributes0,  filterData0.swigCPtr , attributes1,  filterData1.swigCPtr ); else NativePINVOKE.PxSimulationFilterCallback_pairLost(swigCPtr, pairID, objectRemoved, attributes0,  filterData0.swigCPtr , attributes1,  filterData1.swigCPtr );
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
  }

  private void SwigDirectorConnect() {
    global::System.IntPtr swigDelegate0gcHandlePtr = global::System.IntPtr.Zero;
    if (SwigDerivedClassHasMethod("pairLost", swigMethodTypes0)) {
      swigDelegate0 = new SwigDelegatePxSimulationFilterCallback_0(SwigDirectorpairLost);
      swigDelegate0dispatcher = new SwigDelegatePxSimulationFilterCallback_0_Dispatcher(SwigDirectorpairLost_Dispatcher);
      global::System.Runtime.InteropServices.GCHandle swigDelegate0gcHandle = global::System.Runtime.InteropServices.GCHandle.Alloc(swigDelegate0, global::System.Runtime.InteropServices.GCHandleType.Weak);
      swigDelegate0gcHandlePtr = global::System.Runtime.InteropServices.GCHandle.ToIntPtr(swigDelegate0gcHandle);
    }
    NativePINVOKE.PxSimulationFilterCallback_director_connect(swigCPtr, swigDelegate0dispatcher, swigDelegate0gcHandlePtr);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(PxSimulationFilterCallback));
    return hasDerivedMethod;
  }

  private void SwigDirectorpairLost(uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1) {
    pairLost(pairID, objectRemoved, attributes0, new PxFilterData(filterData0, false), attributes1, new PxFilterData(filterData1, false));
  }

  [NativePINVOKE.MonoPInvokeCallback(typeof(SwigDelegatePxSimulationFilterCallback_0_Dispatcher))]
  private static void SwigDirectorpairLost_Dispatcher(global::System.IntPtr swigDelegatePxSimulationFilterCallback_0_Handle, uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1) {
    global::System.Runtime.InteropServices.GCHandle gcHandle = global::System.Runtime.InteropServices.GCHandle.FromIntPtr(swigDelegatePxSimulationFilterCallback_0_Handle);
    SwigDelegatePxSimulationFilterCallback_0 delegateSwigDelegatePxSimulationFilterCallback_0 = (SwigDelegatePxSimulationFilterCallback_0) gcHandle.Target;
delegateSwigDelegatePxSimulationFilterCallback_0(pairID, objectRemoved, attributes0, filterData0, attributes1, filterData1);
  }

  public delegate void SwigDelegatePxSimulationFilterCallback_0(uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1);

  private SwigDelegatePxSimulationFilterCallback_0 swigDelegate0;

  public delegate void SwigDelegatePxSimulationFilterCallback_0_Dispatcher(global::System.IntPtr swigDelegatePxSimulationFilterCallback_0_Handle, uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1);

  private SwigDelegatePxSimulationFilterCallback_0_Dispatcher swigDelegate0dispatcher;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(uint), typeof(bool), typeof(uint), typeof( PxFilterData ), typeof(uint), typeof( PxFilterData ) };
}

}

// //------------------------------------------------------------------------------
// // <auto-generated />
// //
// // This file was automatically generated by SWIG (http://www.swig.org).
// // Version 4.0.2
// //
// // Do not make changes to this file unless you know what you are doing--modify
// // the SWIG interface file instead.
// //------------------------------------------------------------------------------
//
// namespace NVIDIA.PhysX {
//
// public partial class PxSimulationFilterCallback {
//   private global::System.Runtime.InteropServices.HandleRef swigCPtr;
//   protected bool swigCMemOwn;
//
//   internal PxSimulationFilterCallback(global::System.IntPtr cPtr, bool cMemoryOwn) {
//     swigCMemOwn = cMemoryOwn;
//     swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
//   }
//
//   internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxSimulationFilterCallback obj) {
//     return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
//   }
//
//   ~PxSimulationFilterCallback() {
//     destroy();
//   }
//
//   public virtual void destroy() {
//     lock(this) {
//       if (swigCPtr.Handle != global::System.IntPtr.Zero) {
//         if (swigCMemOwn) {
//           swigCMemOwn = false;
//           NativePINVOKE.delete_PxSimulationFilterCallback(swigCPtr);
//         }
//         swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
//       }
//       global::System.GC.SuppressFinalize(this);
//     }
//   }
//
//   public PxSimulationFilterCallback() : this(NativePINVOKE.new_PxSimulationFilterCallback(), true) {
//     if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
//     SwigDirectorConnect();
//   }
//
//   public virtual void pairLost(uint pairID, bool objectRemoved, uint attributes0,  PxFilterData  filterData0, uint attributes1,  PxFilterData  filterData1) {
//     if (SwigDerivedClassHasMethod("pairLost", swigMethodTypes0)) NativePINVOKE.PxSimulationFilterCallback_pairLostSwigExplicitPxSimulationFilterCallback(swigCPtr, pairID, objectRemoved, attributes0,  filterData0.swigCPtr , attributes1,  filterData1.swigCPtr ); else NativePINVOKE.PxSimulationFilterCallback_pairLost(swigCPtr, pairID, objectRemoved, attributes0,  filterData0.swigCPtr , attributes1,  filterData1.swigCPtr );
//     if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
//   }
//
//   private void SwigDirectorConnect() {
//     if (SwigDerivedClassHasMethod("pairLost", swigMethodTypes0))
//       swigDelegate0 = new SwigDelegatePxSimulationFilterCallback_0(SwigDirectorMethodpairLost);
//     NativePINVOKE.PxSimulationFilterCallback_director_connect(swigCPtr, swigDelegate0);
//   }
//
//   private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
//     global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
//     bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(PxSimulationFilterCallback));
//     return hasDerivedMethod;
//   }
//
//   private void SwigDirectorMethodpairLost(uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1) {
//     pairLost(pairID, objectRemoved, attributes0, new PxFilterData(filterData0, false), attributes1, new PxFilterData(filterData1, false));
//   }
//
//   public delegate void SwigDelegatePxSimulationFilterCallback_0(uint pairID, bool objectRemoved, uint attributes0, global::System.IntPtr filterData0, uint attributes1, global::System.IntPtr filterData1);
//
//   private SwigDelegatePxSimulationFilterCallback_0 swigDelegate0;
//
//   private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(uint), typeof(bool), typeof(uint), typeof( PxFilterData ), typeof(uint), typeof( PxFilterData ) };
// }
//
// }
